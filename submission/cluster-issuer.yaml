apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-issuer-config
  namespace: default
data:
  cluster-issuer.yaml: |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-staging
      namespace: default
    spec:
      acme:
        server: https://acme-staging-v02.api.letsencrypt.org/directory
        email: glo7009@ulaval.ca
        privateKeySecretRef:
          name: letsencrypt-staging
        solvers:
        - http01:
            ingress:
              class: nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clusterissuer-access
  namespace: default
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterissuer-access-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clusterissuer-access
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: apply-cluster-issuer
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - sh
        - -c
        - |
          echo "Applying ClusterIssuer..."
          kubectl apply -f /config/cluster-issuer.yaml
        volumeMounts:
        - name: config-volume
          mountPath: /config
      restartPolicy: OnFailure
      volumes:
      - name: config-volume
        configMap:
          name: cluster-issuer-config
  backoffLimit: 4
