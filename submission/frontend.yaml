apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-frontend
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: glo7008/frontend:submission
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: srv-frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - localhost
    secretName: frontend-tls
  rules:
    - host: localhost
      http:
        paths:
          - path: /(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: srv-frontend
                port:
                  number: 80
          - path: /api/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: srv-api-gateway
                port:
                  number: 8080
          - path: /analyze/sentence
            pathType: Prefix
            backend:
              service:
                name: srv-logic-api
                port:
                  number: 5000
          - path: /admin/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: srv-feedback-api
                port:
                  number: 9000
          - path: /loki/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: loki
                port:
                  number: 3100
           # Serve Grafana as usual for all other paths under /grafana
          - path: /grafana/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: grafana
                port:
                  number: 3000
          - path: /argocd/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: argocd-server
                port:
                  number: 8080


